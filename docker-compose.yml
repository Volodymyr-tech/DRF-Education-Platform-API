version: '3.9'

services:

  web:
    build: .
    env_file:
      - .env
      - .env.docker
    command: >
      sh -c "python manage.py makemigrations && \
             python manage.py migrate && \
             python manage.py collectstatic --noinput && \
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"

    volumes:
      - .:/app
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy


  db:
    image: postgres:17
    env_file:
      - .env
      - .env.docker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    env_file:
      - .env
      - .env.docker
    ports:
      - "6379:6379"
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    build: .
    env_file:
      - .env
      - .env.docker
    command:
      - celery
      - -A
      - config
      - worker
      - -l
      - INFO
      - -P
      - eventlet
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    env_file:
      - .env
      - .env.docker
    command: >
      sh -c "python manage.py migrate && \
             celery -A config beat -l INFO -S django"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
  static_volume:
