name: Django CI


on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.2'

      - name: install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: |
          poetry add flake8 

      - name: Run Flake8
        run: poetry run flake8 .

  test:
    runs-on: ubuntu-latest
    needs: lint

    env: # this variable will de able for each step in this job
      GITHUB_ACTIONS: true

    steps:
      - name: Set environment variables
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV  

      - name: Check out code # allow us to clone code to container where we're going to do jobs
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.2'

      - name: install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        # flag --no-root for DO NOT install the project itself as a package.
        run: |
          poetry install --no-root

        #poetry run runs any command inside the virtual environment that Poetry creates.
        #Without this, the command is executed "as is" â€” and there is no Django.
      - name: Run migrate
        run: poetry run python manage.py migrate

      - name: Run tests
        run: poetry run python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up SSH VM and SSH for GitHub
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to server pull code, clean up & restart
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -xe
            cd ~/myapp/DRF-Education-Platform-API
               
            git pull origin main
               
            docker system prune -a --volumes -f

            docker compose down --remove-orphans
            git pull origin main
            docker compose up -d
          EOF